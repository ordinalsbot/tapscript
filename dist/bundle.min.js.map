{"version":3,"file":"bundle.min.js","sources":["../node_modules/@cmdcode/buff-utils/dist/module.mjs","../src/lib/utils.ts","../src/lib/script/words.ts","../src/lib/check.ts","../src/lib/script/encode.ts","../src/lib/script/decode.ts","../src/lib/script/format.ts","../src/lib/script/index.ts","../node_modules/@cmdcode/crypto-utils/dist/module.mjs","../src/lib/addr/hash.ts","../src/lib/addr/p2pkh.ts","../src/lib/addr/p2sh.ts","../src/lib/addr/schema.ts","../src/lib/addr/p2w-pkh.ts","../src/lib/addr/p2w-sh.ts","../src/lib/tap/utils.ts","../src/lib/addr/p2tr.ts","../src/lib/tx/create.ts","../src/lib/tx/encode.ts","../src/lib/tx/decode.ts","../src/lib/tx/format.ts","../src/lib/tx/parse.ts","../src/lib/tx/index.ts","../src/lib/addr/utils.ts","../src/lib/addr/index.ts","../src/lib/sig/segwit/hash.ts","../src/lib/sig/segwit/index.ts","../src/lib/sig/segwit/sign.ts","../src/lib/sig/segwit/verify.ts","../src/lib/sig/taproot/hash.ts","../src/lib/sig/taproot/sign.ts","../src/lib/tap/tree.ts","../src/lib/tap/tweak.ts","../src/lib/tap/key.ts","../src/lib/sig/taproot/index.ts","../src/lib/sig/taproot/verify.ts","../src/lib/sig/index.ts","../src/lib/tap/index.ts","../src/class/Transaction/TxScript.ts","../src/class/Transaction/TxSequence.ts","../src/class/Transaction/TxOutput.ts","../src/class/Transaction/TxWitness.ts","../src/class/Transaction/TxInput.ts","../src/class/Transaction/TxLocktime.ts","../node_modules/zod/lib/index.mjs","../src/schema/check.ts","../src/class/Transaction/Transaction.ts"],"sourcesContent":["function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert$1 = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nvar assert$2 = assert$1;\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nArray.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert$2.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert$2.exists(this);\n        assert$2.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256 = wrapConstructor(() => new SHA256());\nwrapConstructor(() => new SHA224());\n\nfunction within_size(data, size) {\n    if (data.length > size) {\n        throw new TypeError(`Data is larger than array size: ${data.length} > ${size}`);\n    }\n}\nfunction is_hex(hex) {\n    if (hex.match(/[^a-fA-f0-9]/) !== null) {\n        throw new TypeError('Invalid characters in hex string: ' + hex);\n    }\n    if (hex.length % 2 !== 0) {\n        throw new Error(`Length of hex string is invalid: ${hex.length}`);\n    }\n}\nfunction is_json(str) {\n    try {\n        JSON.parse(str);\n    }\n    catch {\n        throw new TypeError('JSON string is invalid!');\n    }\n}\nfunction is_safe_num(num) {\n    if (num > Number.MAX_SAFE_INTEGER) {\n        throw new TypeError('Number exceeds safe bounds!');\n    }\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    is_hex: is_hex,\n    is_json: is_json,\n    is_safe_num: is_safe_num,\n    within_size: within_size\n});\n\nconst { getRandomValues } = crypto ?? globalThis.crypto ?? window.crypto;\nfunction random(size = 32) {\n    if (typeof getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(size));\n    }\n    throw new Error('Crypto module missing getRandomValues!');\n}\nfunction set_buffer(data, size, endian = 'be') {\n    if (size === undefined)\n        size = data.length;\n    within_size(data, size);\n    const buffer = new Uint8Array(size).fill(0);\n    const offset = (endian === 'be') ? 0 : size - data.length;\n    buffer.set(data, offset);\n    return buffer;\n}\nfunction join_array(arr) {\n    let i, offset = 0;\n    const size = arr.reduce((len, arr) => len + arr.length, 0);\n    const buff = new Uint8Array(size);\n    for (i = 0; i < arr.length; i++) {\n        const a = arr[i];\n        buff.set(a, offset);\n        offset += a.length;\n    }\n    return buff;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    join_array: join_array,\n    random: random,\n    set_buffer: set_buffer\n});\n\nconst ec$2 = new TextEncoder();\nconst ALPHABETS = [\n    {\n        name: 'base58',\n        charset: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n    }\n];\nfunction getAlphabet(name) {\n    for (const alpha of ALPHABETS) {\n        if (alpha.name === name) {\n            return alpha.charset;\n        }\n    }\n    throw TypeError('Charset does not exist: ' + name);\n}\nfunction encode$1(data, charset, padding = false) {\n    if (typeof data === 'string')\n        data = ec$2.encode(data);\n    const alphabet = getAlphabet(charset);\n    const len = alphabet.length;\n    const d = [];\n    let s = '', i, j = 0, c, n;\n    for (i = 0; i < data.length; i++) {\n        j = 0;\n        c = data[i];\n        s += (c > 0 || (s.length ^ i) > 0) ? '' : '1';\n        while (j in d || c > 0) {\n            n = d[j];\n            n = n > 0 ? n * 256 + c : c;\n            c = n / len | 0;\n            d[j] = n % len;\n            j++;\n        }\n    }\n    while (j-- > 0) {\n        s += alphabet[d[j]];\n    }\n    return (padding && s.length % 4 > 0)\n        ? s + '='.repeat(4 - s.length % 4)\n        : s;\n}\nfunction decode$1(encoded, charset) {\n    const alphabet = getAlphabet(charset);\n    const len = alphabet.length, d = [], b = [];\n    encoded = encoded.replace('=', '');\n    let i, j = 0, c, n;\n    for (i = 0; i < encoded.length; i++) {\n        j = 0;\n        c = alphabet.indexOf(encoded[i]);\n        if (c < 0) {\n            throw new Error(`Character range out of bounds: ${c}`);\n        }\n        if (!(c > 0 || (b.length ^ i) > 0))\n            b.push(0);\n        while (j in d || c > 0) {\n            n = d[j];\n            n = n > 0 ? n * len + c : c;\n            c = n >> 8;\n            d[j] = n % 256;\n            j++;\n        }\n    }\n    while (j-- > 0) {\n        b.push(d[j]);\n    }\n    return new Uint8Array(b);\n}\nfunction hash256(data) {\n    return sha256(sha256(data));\n}\nfunction addChecksum(data) {\n    const sum = hash256(data);\n    return join_array([data, sum.slice(0, 4)]);\n}\nfunction checkTheSum(data) {\n    const ret = data.slice(0, -4);\n    const chk = data.slice(-4);\n    const sum = hash256(ret).slice(0, 4);\n    if (sum.toString() !== chk.toString()) {\n        throw new Error('Invalid checksum!');\n    }\n    return ret;\n}\nconst BaseX = {\n    encode: encode$1,\n    decode: decode$1\n};\nconst Base58 = {\n    encode: (data) => BaseX.encode(data, 'base58'),\n    decode: (data) => BaseX.decode(data, 'base58')\n};\nconst Base58C = {\n    encode: (data) => {\n        const withSum = addChecksum(data);\n        return BaseX.encode(withSum, 'base58');\n    },\n    decode: (data) => {\n        const decoded = BaseX.decode(data, 'base58');\n        return checkTheSum(decoded);\n    }\n};\n\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nconst ENCODINGS = [\n    { version: 0, name: 'bech32', const: 1 },\n    { version: 1, name: 'bech32m', const: 0x2bc830a3 }\n];\nfunction polymod(values) {\n    let chk = 1;\n    for (let p = 0; p < values.length; ++p) {\n        const top = chk >> 25;\n        chk = (chk & 0x1ffffff) << 5 ^ values[p];\n        for (let i = 0; i < 5; ++i) {\n            if (((top >> i) & 1) !== 0) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n}\nfunction hrpExpand(hrp) {\n    const ret = [];\n    let p;\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n}\nfunction verifyChecksum(hrp, data, enc) {\n    const combined = hrpExpand(hrp).concat(data);\n    return polymod(combined) === enc.const;\n}\nfunction createChecksum(hrp, data, enc) {\n    const values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    const mod = polymod(values) ^ enc.const;\n    const ret = [];\n    for (let p = 0; p < 6; ++p) {\n        ret.push((mod >> 5 * (5 - p)) & 31);\n    }\n    return ret;\n}\nfunction convertBits(data, fromBits, toBits, pad = true) {\n    const ret = [];\n    let acc = 0;\n    let bits = 0;\n    const maxVal = (1 << toBits) - 1;\n    const maxAcc = (1 << (fromBits + toBits - 1)) - 1;\n    for (const val of data) {\n        if (val < 0 || (val >> fromBits) > 0) {\n            throw new Error('Failed to perform base conversion. Invalid value: ' + String(val));\n        }\n        acc = ((acc << fromBits) | val) & maxAcc;\n        bits += fromBits;\n        while (bits >= toBits) {\n            bits -= toBits;\n            ret.push((acc >> bits) & maxVal);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            ret.push((acc << (toBits - bits)) & maxVal);\n        }\n    }\n    else if (bits >= fromBits || ((acc << (toBits - bits)) & maxVal) > 0) {\n        throw new Error('Failed to perform base conversion. Invalid Size!');\n    }\n    return ret;\n}\nfunction encode(hrp, data, enc) {\n    const combined = data.concat(createChecksum(hrp, data, enc));\n    let ret = hrp + '1';\n    for (let p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n}\nfunction decode(bechstr) {\n    if (!checkBounds(bechstr)) {\n        throw new Error('Encoded string goes out of bounds!');\n    }\n    bechstr = bechstr.toLowerCase();\n    if (!checkSeparatorPos(bechstr)) {\n        throw new Error('Encoded string has invalid separator!');\n    }\n    const data = [];\n    const pos = bechstr.lastIndexOf('1');\n    const hrp = bechstr.substring(0, pos);\n    for (let p = pos + 1; p < bechstr.length; ++p) {\n        const d = CHARSET.indexOf(bechstr.charAt(p));\n        if (d === -1) {\n            throw new Error('Character idx out of bounds: ' + String(p));\n        }\n        data.push(d);\n    }\n    const enc = ENCODINGS.find(e => e.version === data[0]) ?? ENCODINGS[0];\n    if (!verifyChecksum(hrp, data, enc)) {\n        throw new Error('Checksum verification failed!');\n    }\n    return [hrp, data.slice(0, data.length - 6)];\n}\nfunction checkBounds(bechstr) {\n    let p;\n    let char;\n    let hasLower = false;\n    let hasUpper = false;\n    for (p = 0; p < bechstr.length; ++p) {\n        char = bechstr.charCodeAt(p);\n        if (char < 33 || char > 126) {\n            return false;\n        }\n        if (char >= 97 && char <= 122) {\n            hasLower = true;\n        }\n        if (char >= 65 && char <= 90) {\n            hasUpper = true;\n        }\n    }\n    if (hasLower && hasUpper)\n        return false;\n    return true;\n}\nfunction checkSeparatorPos(bechstr) {\n    const pos = bechstr.lastIndexOf('1');\n    return !(pos < 1 ||\n        pos + 7 > bechstr.length ||\n        bechstr.length > 90);\n}\nfunction b32encode(data, hrp = 'bc', version = 0) {\n    const dat = [version, ...convertBits([...data], 8, 5)];\n    const enc = ENCODINGS.find(e => e.version === version) ?? ENCODINGS[0];\n    const str = encode(hrp, dat, enc);\n    b32decode(str);\n    return str;\n}\nfunction b32decode(str) {\n    str = str.toLowerCase();\n    const hrp = str.split('1', 1)[0];\n    const [hrpgot, data] = decode(str);\n    const decoded = convertBits(data.slice(1), 5, 8, false);\n    const length = decoded.length;\n    switch (true) {\n        case (hrp !== hrpgot):\n            throw new Error('Returned hrp string is invalid.');\n        case (decoded === null || length < 2 || length > 40):\n            throw new Error('Decoded string is invalid or out of spec.');\n        case (data[0] > 16):\n            throw new Error('Returned version bit is out of range.');\n        default:\n            return Uint8Array.from(decoded);\n    }\n}\nfunction getVersion(str) {\n    str = str.toLowerCase();\n    const [_, data] = decode(str);\n    return data[0];\n}\nconst Bech32 = {\n    encode: b32encode,\n    decode: b32decode,\n    version: getVersion\n};\n\nconst BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst B64URL_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nconst ec$1 = new TextEncoder();\nfunction b64encode(input, urlSafe = false, padding = true) {\n    if (typeof input === 'string')\n        input = ec$1.encode(input);\n    const map = urlSafe ? B64URL_MAP : BASE64_MAP;\n    let output = '';\n    let bits = 0;\n    let buffer = 0;\n    for (let i = 0; i < input.length; i++) {\n        buffer = (buffer << 8) | input[i];\n        bits += 8;\n        while (bits >= 6) {\n            bits -= 6;\n            output += map[(buffer >> bits) & 0x3f];\n        }\n    }\n    if (bits > 0) {\n        buffer <<= 6 - bits;\n        output += map[buffer & 0x3f];\n        while (bits < 6) {\n            output += padding ? '=' : '';\n            bits += 2;\n        }\n    }\n    return output;\n}\nfunction b64decode(input, urlSafe = false) {\n    const map = (urlSafe || input.includes('-') || input.includes('_'))\n        ? B64URL_MAP.split('')\n        : BASE64_MAP.split('');\n    input = input.replace(/=+$/, '');\n    const chars = input.split('');\n    let bits = 0;\n    let value = 0;\n    const bytes = [];\n    for (let i = 0; i < chars.length; i++) {\n        const c = chars[i];\n        const index = map.indexOf(c);\n        if (index === -1) {\n            throw new Error('Invalid character: ' + c);\n        }\n        bits += 6;\n        value <<= 6;\n        value |= index;\n        if (bits >= 8) {\n            bits -= 8;\n            bytes.push((value >>> bits) & 0xff);\n        }\n    }\n    return new Uint8Array(bytes);\n}\nconst Base64 = {\n    encode: b64encode,\n    decode: b64decode\n};\nconst B64URL = {\n    encode: (data) => b64encode(data, true, false),\n    decode: (data) => b64decode(data, true)\n};\n\nconst _0n = BigInt(0);\nconst _255n = BigInt(255);\nconst _256n = BigInt(256);\nfunction big_size(big) {\n    if (big <= 0xffn)\n        return 1;\n    if (big <= 0xffffn)\n        return 2;\n    if (big <= 0xffffffffn)\n        return 4;\n    if (big <= 0xffffffffffffffffn)\n        return 8;\n    if (big <= 0xffffffffffffffffffffffffffffffffn)\n        return 16;\n    if (big <= 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn) {\n        return 32;\n    }\n    throw new TypeError('Must specify a fixed buffer size for bigints greater than 32 bytes.');\n}\nfunction bigToBytes(big, size, endian = 'be') {\n    if (size === undefined)\n        size = big_size(big);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    while (big > _0n) {\n        const byte = big & _255n;\n        const num = Number(byte);\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n        big = (big - byte) / _256n;\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToBig(bytes) {\n    let num = BigInt(0);\n    for (let i = bytes.length - 1; i >= 0; i--) {\n        num = (num * _256n) + BigInt(bytes[i]);\n    }\n    return BigInt(num);\n}\n\nfunction binToBytes(binary) {\n    const bins = binary.split('').map(Number);\n    if (bins.length % 8 !== 0) {\n        throw new Error(`Binary array is invalid length: ${binary.length}`);\n    }\n    const bytes = new Uint8Array(bins.length / 8);\n    for (let i = 0, ct = 0; i < bins.length; i += 8, ct++) {\n        let byte = 0;\n        for (let j = 0; j < 8; j++) {\n            byte |= (bins[i + j] << (7 - j));\n        }\n        bytes[ct] = byte;\n    }\n    return bytes;\n}\nfunction bytesToBin(bytes) {\n    const bin = new Array(bytes.length * 8);\n    let count = 0;\n    for (const num of bytes) {\n        if (num > 255) {\n            throw new Error(`Invalid byte value: ${num}. Byte values must be between 0 and 255.`);\n        }\n        for (let i = 7; i >= 0; i--, count++) {\n            bin[count] = (num >> i) & 1;\n        }\n    }\n    return bin.join('');\n}\n\nfunction num_size(num) {\n    if (num <= 0xFF)\n        return 1;\n    if (num <= 0xFFFF)\n        return 2;\n    if (num <= 0xFFFFFFFF)\n        return 4;\n    throw new TypeError('Numbers larger than 4 bytes must specify a fixed size!');\n}\nfunction numToBytes(num, size, endian = 'be') {\n    if (size === undefined)\n        size = num_size(num);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    while (num > 0) {\n        const byte = num & 255;\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n        num = (num - byte) / 256;\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToNum(bytes) {\n    let num = 0;\n    for (let i = bytes.length - 1; i >= 0; i--) {\n        num = (num * 256) + bytes[i];\n        is_safe_num(num);\n    }\n    return num;\n}\n\nconst ec = new TextEncoder();\nconst dc = new TextDecoder();\nfunction strToBytes(str) {\n    return ec.encode(str);\n}\nfunction bytesToStr(bytes) {\n    return dc.decode(bytes);\n}\nfunction hex_size(hexstr, size) {\n    is_hex(hexstr);\n    const len = hexstr.length / 2;\n    if (size === undefined)\n        size = len;\n    if (len > size) {\n        throw new TypeError(`Hex string is larger than array size: ${len} > ${size}`);\n    }\n    return size;\n}\nfunction hexToBytes(hexstr, size, endian = 'le') {\n    size = hex_size(hexstr, size);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    for (let i = 0; i < hexstr.length; i += 2) {\n        const char = hexstr.substring(i, i + 2);\n        const num = parseInt(char, 16);\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToHex(bytes) {\n    let chars = '';\n    for (let i = 0; i < bytes.length; i++) {\n        chars += bytes[i].toString(16).padStart(2, '0');\n    }\n    return chars;\n}\nfunction jsonToBytes(obj) {\n    const str = JSON.stringify(obj, (_, v) => {\n        return typeof v === 'bigint'\n            ? `${v}n`\n            : v;\n    });\n    return strToBytes(str);\n}\nconst Hex = {\n    encode: bytesToHex,\n    decode: hexToBytes\n};\nconst Txt = {\n    encode: strToBytes,\n    decode: bytesToStr\n};\n\nfunction buffer(data, size, endian) {\n    if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    if (data instanceof Uint8Array) {\n        return set_buffer(data, size, endian);\n    }\n    if (typeof data === 'string') {\n        return hexToBytes(data, size, endian);\n    }\n    if (typeof data === 'bigint') {\n        return bigToBytes(data, size, endian);\n    }\n    if (typeof data === 'number') {\n        return numToBytes(data, size, endian);\n    }\n    if (typeof data === 'boolean') {\n        return Uint8Array.of(data ? 1 : 0);\n    }\n    throw TypeError('Unsupported format:' + String(typeof data));\n}\n\nclass Buff extends Uint8Array {\n    static { this.num = numToBuff; }\n    static { this.big = bigToBuff; }\n    static { this.bin = binToBuff; }\n    static { this.raw = rawToBuff; }\n    static { this.str = strToBuff; }\n    static { this.hex = hexToBuff; }\n    static { this.bytes = bytesToBuff; }\n    static { this.json = jsonToBuff; }\n    static { this.base64 = base64ToBuff; }\n    static { this.b64url = b64urlToBuff; }\n    static { this.bech32 = bech32ToBuff; }\n    static { this.b58chk = b58chkToBuff; }\n    static { this.encode = strToBytes; }\n    static { this.decode = bytesToStr; }\n    static random(size = 32) {\n        const rand = random(size);\n        return new Buff(rand, size);\n    }\n    constructor(data, size, endian) {\n        const buffer$1 = buffer(data, size, endian);\n        super(buffer$1);\n    }\n    get arr() {\n        return [...this];\n    }\n    get num() {\n        return this.toNum();\n    }\n    get big() {\n        return this.toBig();\n    }\n    get str() {\n        return this.toStr();\n    }\n    get hex() {\n        return this.toHex();\n    }\n    get raw() {\n        return new Uint8Array(this);\n    }\n    get bin() {\n        return this.toBin();\n    }\n    get b58chk() {\n        return this.tob58chk();\n    }\n    get base64() {\n        return this.toBase64();\n    }\n    get b64url() {\n        return this.toB64url();\n    }\n    get digest() {\n        return this.toHash();\n    }\n    get id() {\n        return this.toHash().hex;\n    }\n    get stream() {\n        return new Stream(this);\n    }\n    toNum(endian = 'be') {\n        const bytes = (endian === 'be')\n            ? this.reverse()\n            : this;\n        return bytesToNum(bytes);\n    }\n    toBin() {\n        return bytesToBin(this);\n    }\n    toBig(endian = 'be') {\n        const bytes = (endian === 'be')\n            ? this.reverse()\n            : this;\n        return bytesToBig(bytes);\n    }\n    toHash() {\n        const digest = sha256(this);\n        return new Buff(digest);\n    }\n    toJson() {\n        const str = bytesToStr(this);\n        return JSON.parse(str);\n    }\n    toBech32(hrp, version = 0) {\n        return Bech32.encode(this, hrp, version);\n    }\n    toStr() { return bytesToStr(this); }\n    toHex() { return bytesToHex(this); }\n    toBytes() { return new Uint8Array(this); }\n    tob58chk() { return Base58C.encode(this); }\n    toBase64() { return Base64.encode(this); }\n    toB64url() { return B64URL.encode(this); }\n    prepend(data) {\n        return Buff.join([Buff.bytes(data), this]);\n    }\n    append(data) {\n        return Buff.join([this, Buff.bytes(data)]);\n    }\n    slice(start, end) {\n        const arr = new Uint8Array(this).slice(start, end);\n        return new Buff(arr);\n    }\n    subarray(begin, end) {\n        const arr = new Uint8Array(this).subarray(begin, end);\n        return new Buff(arr);\n    }\n    reverse() {\n        const arr = new Uint8Array(this).reverse();\n        return new Buff(arr);\n    }\n    write(bytes, offset) {\n        const b = Buff.bytes(bytes);\n        this.set(b, offset);\n    }\n    prefixSize(endian) {\n        const size = Buff.varInt(this.length, endian);\n        return Buff.join([size, this]);\n    }\n    static from(data) {\n        return new Buff(Uint8Array.from(data));\n    }\n    static of(...args) {\n        return new Buff(Uint8Array.of(...args));\n    }\n    static join(arr) {\n        const bytes = arr.map(e => Buff.bytes(e));\n        const joined = join_array(bytes);\n        return new Buff(joined);\n    }\n    static varInt(num, endian) {\n        if (num < 0xFD) {\n            return Buff.num(num, 1);\n        }\n        else if (num < 0x10000) {\n            return Buff.of(0xFD, ...Buff.num(num, 2, endian));\n        }\n        else if (num < 0x100000000) {\n            return Buff.of(0xFE, ...Buff.num(num, 4, endian));\n        }\n        else if (BigInt(num) < 0x10000000000000000n) {\n            return Buff.of(0xFF, ...Buff.num(num, 8, endian));\n        }\n        else {\n            throw new Error(`Value is too large: ${num}`);\n        }\n    }\n}\nfunction numToBuff(number, size, endian) {\n    return new Buff(number, size, endian);\n}\nfunction binToBuff(data, size, endian) {\n    return new Buff(binToBytes(data), size, endian);\n}\nfunction bigToBuff(bigint, size, endian) {\n    return new Buff(bigint, size, endian);\n}\nfunction rawToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction strToBuff(data, size, endian) {\n    return new Buff(strToBytes(data), size, endian);\n}\nfunction hexToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction bytesToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction jsonToBuff(data) {\n    return new Buff(jsonToBytes(data));\n}\nfunction base64ToBuff(data) {\n    return new Buff(Base64.decode(data));\n}\nfunction b64urlToBuff(data) {\n    return new Buff(B64URL.decode(data));\n}\nfunction bech32ToBuff(data) {\n    return new Buff(Bech32.decode(data));\n}\nfunction b58chkToBuff(data) {\n    return new Buff(Base58C.decode(data));\n}\nclass Stream {\n    constructor(data) {\n        this.data = Buff.bytes(data);\n        this.size = this.data.length;\n    }\n    peek(size) {\n        if (size > this.size) {\n            throw new Error(`Size greater than stream: ${size} > ${this.size}`);\n        }\n        return new Buff(this.data.slice(0, size));\n    }\n    read(size) {\n        size = size ?? this.readSize();\n        const chunk = this.peek(size);\n        this.data = this.data.slice(size);\n        this.size = this.data.length;\n        return chunk;\n    }\n    readSize(endian) {\n        const num = this.read(1).num;\n        switch (true) {\n            case (num >= 0 && num < 0xFD):\n                return num;\n            case (num === 0xFD):\n                return this.read(2).toNum(endian);\n            case (num === 0xFE):\n                return this.read(4).toNum(endian);\n            case (num === 0xFF):\n                return this.read(8).toNum(endian);\n            default:\n                throw new Error(`Varint is out of range: ${num}`);\n        }\n    }\n}\n\nexport { B64URL, Base58, Base58C, Base64, Bech32, Buff, Hex, Stream, Txt, assert, b64decode, buffer, utils as util };\n//# sourceMappingURL=module.mjs.map\n",null,null,null,null,null,null,null,"function number$2(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool$2(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes$2(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash$3(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number$2(hash.outputLen);\n    number$2(hash.blockLen);\n}\nfunction exists$2(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output$2(out, instance) {\n    bytes$2(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert$3 = {\n    number: number$2,\n    bool: bool$2,\n    bytes: bytes$2,\n    hash: hash$3,\n    exists: exists$2,\n    output: output$2,\n};\nvar assert$4 = assert$3;\n\nconst crypto$1 = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\n// Cast array to view\nconst createView$2 = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr$2 = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nconst isLE$2 = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE$2)\n    throw new Error('Non little-endian hardware is not supported');\nArray.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction utf8ToBytes$3(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nfunction toBytes$2(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes$3(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes$1(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nlet Hash$2 = class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n};\nfunction wrapConstructor$2(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes$2(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto$1 && typeof crypto$1.getRandomValues === 'function') {\n        return crypto$1.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n\n// Polyfill for Safari 14\nfunction setBigUint64$2(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nlet SHA2$2 = class SHA2 extends Hash$2 {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView$2(this.buffer);\n    }\n    update(data) {\n        assert$4.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes$2(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView$2(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert$4.exists(this);\n        assert$4.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64$2(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView$2(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n};\n\n// Choice: a ? b : c\nconst Chi$2 = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj$2 = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K$2 = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV$2 = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W$2 = new Uint32Array(64);\nlet SHA256$2 = class SHA256 extends SHA2$2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV$2[0] | 0;\n        this.B = IV$2[1] | 0;\n        this.C = IV$2[2] | 0;\n        this.D = IV$2[3] | 0;\n        this.E = IV$2[4] | 0;\n        this.F = IV$2[5] | 0;\n        this.G = IV$2[6] | 0;\n        this.H = IV$2[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W$2[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W$2[i - 15];\n            const W2 = SHA256_W$2[i - 2];\n            const s0 = rotr$2(W15, 7) ^ rotr$2(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr$2(W2, 17) ^ rotr$2(W2, 19) ^ (W2 >>> 10);\n            SHA256_W$2[i] = (s1 + SHA256_W$2[i - 7] + s0 + SHA256_W$2[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr$2(E, 6) ^ rotr$2(E, 11) ^ rotr$2(E, 25);\n            const T1 = (H + sigma1 + Chi$2(E, F, G) + SHA256_K$2[i] + SHA256_W$2[i]) | 0;\n            const sigma0 = rotr$2(A, 2) ^ rotr$2(A, 13) ^ rotr$2(A, 22);\n            const T2 = (sigma0 + Maj$2(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W$2.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n};\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nlet SHA224$2 = class SHA224 extends SHA256$2 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n};\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256$3 = wrapConstructor$2(() => new SHA256$2());\nwrapConstructor$2(() => new SHA224$2());\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n$8 = BigInt(0);\nconst _1n$5 = BigInt(1);\nconst _2n$4 = BigInt(2);\nconst u8a$1 = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex$1(bytes) {\n    if (!u8a$1(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// Caching slows it down 2-3x\nfunction hexToBytes$1(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    if (hex.length % 2)\n        throw new Error('hex string is invalid: unpadded ' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Big Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex$1(bytes));\n}\nfunction bytesToNumberLE(bytes) {\n    if (!u8a$1(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex$1(Uint8Array.from(bytes).reverse()));\n}\nconst numberToBytesBE = (n, len) => hexToBytes$1(n.toString(16).padStart(len * 2, '0'));\nconst numberToBytesLE = (n, len) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nconst numberToVarBytesBE = (n) => hexToBytes$1(numberToHexUnpadded(n));\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes$1(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a$1(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n// Copies several Uint8Arrays into one.\nfunction concatBytes(...arrs) {\n    const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrs.forEach((a) => {\n        if (!u8a$1(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nfunction equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nfunction utf8ToBytes$2(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\n// Bit operations\n// Amount of bits inside bigint (Same as n.toString(2).length)\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > 0n; n >>= _1n$5, len += 1)\n        ;\n    return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nconst bitGet = (n, pos) => (n >> BigInt(pos)) & 1n;\n// Sets single bit at position\nconst bitSet = (n, pos, value) => n | ((value ? _1n$5 : _0n$8) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nconst bitMask = (n) => (_2n$4 << BigInt(n - 1)) - _1n$5;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\nvar ut = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    bitGet: bitGet,\n    bitLen: bitLen,\n    bitMask: bitMask,\n    bitSet: bitSet,\n    bytesToHex: bytesToHex$1,\n    bytesToNumberBE: bytesToNumberBE,\n    bytesToNumberLE: bytesToNumberLE,\n    concatBytes: concatBytes,\n    createHmacDrbg: createHmacDrbg,\n    ensureBytes: ensureBytes,\n    equalBytes: equalBytes,\n    hexToBytes: hexToBytes$1,\n    hexToNumber: hexToNumber,\n    numberToBytesBE: numberToBytesBE,\n    numberToBytesLE: numberToBytesLE,\n    numberToHexUnpadded: numberToHexUnpadded,\n    numberToVarBytesBE: numberToVarBytesBE,\n    utf8ToBytes: utf8ToBytes$2,\n    validateObject: validateObject\n});\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\n// prettier-ignore\nconst _0n$7 = BigInt(0), _1n$4 = BigInt(1), _2n$3 = BigInt(2), _3n$2 = BigInt(3);\n// prettier-ignore\nconst _4n$2 = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nBigInt(9); BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n$7 ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n$7 || power < _0n$7)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n$4)\n        return _0n$7;\n    let res = _1n$4;\n    while (power > _0n$7) {\n        if (power & _1n$4)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n$4;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n$7) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n$7 || modulo <= _0n$7) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n$7, u = _1n$4;\n    while (a !== _0n$7) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        // prettier-ignore\n        b = a, a = r, x = u, u = m;\n    }\n    const gcd = b;\n    if (gcd !== _1n$4)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n$4) / _2n$3;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n$4, S = 0; Q % _2n$3 === _0n$7; Q /= _2n$3, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n$3; Z < P && pow(Z, legendreC, P) !== P - _1n$4; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n$4) / _4n$2;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n$4) / _2n$3;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n$4 << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n$2 === _3n$2) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n$4) / _4n$2;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n$3);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n$3), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n$7)\n        throw new Error('Expected power > 0');\n    if (power === _0n$7)\n        return f.ONE;\n    if (power === _1n$4)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n$7) {\n        if (power & _1n$4)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n$4;\n    }\n    return p;\n}\n// 0 is non-invertible: non-batched version will throw on 0\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field$1(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n$7)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n$7,\n        ONE: _1n$4,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n$7 <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n$7,\n        isOdd: (num) => (num & _1n$4) === _1n$4,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n$4) + _1n$4;\n}\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst _0n$6 = BigInt(0);\nconst _1n$3 = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n$6) {\n                if (n & _1n$3)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n$3;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n$3;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nfunction validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nconst DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        if (res[0] === 0x00 && res[1] <= 0x7f)\n            throw new E('Invalid signature integer: trailing length');\n        // ^ Weird condition: not about length, but about first bytes of number.\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        const slice = (s) => (Number.parseInt(s[0], 16) >= 8 ? '00' + s : s); // slice DER\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n$5 = BigInt(0), _1n$2 = BigInt(1), _2n$2 = BigInt(2), _3n$1 = BigInt(3), _4n$1 = BigInt(4);\nfunction weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n$5 < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = bytesToHex$1(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n$1);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n$1);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n$5)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n$2)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n$5 || k2 > _0n$5) {\n                if (k1 & _1n$2)\n                    k1p = k1p.add(d);\n                if (k2 & _1n$2)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n$2;\n                k2 >>= _1n$2;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n$5 || a === _1n$2 || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n$2)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n$2)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex$1(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nfunction weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n$5 < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n$2) === _1n$2;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => bytesToHex$1(numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n$2;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return hexToBytes$1(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return hexToBytes$1(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = hashToPrivateScalar(rand, CURVE_ORDER);\n            return numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n$5 <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n$5)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n$5)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n$2); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash (not message: you need to hash it by yourself).\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param opts `lowS, extraEntropy, prehash`\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nfunction SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n$5;\n    for (let o = q - _1n$2; o % _2n$2 === _0n$5; o /= _2n$2)\n        l += _1n$2;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    const c2 = (q - _1n$2) / _2n$2 ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n    const c3 = (c2 - _1n$2) / _2n$2; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n$2 ** c1 - _1n$2; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n$2 ** (c1 - _1n$2); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n$2) / _2n$2); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > 1; i--) {\n            let tv5 = _2n$2 ** (i - _2n$2); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n$1 === _3n$1) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n$1) / _4n$1; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nfunction mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return utf8ToBytes$2(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes$2('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes$2('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === undefined) {\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\", \"xof\" or undefined');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n\n// HMAC (RFC 2104)\nlet HMAC$1 = class HMAC extends Hash$2 {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert$4.hash(hash);\n        const key = toBytes$2(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert$4.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert$4.exists(this);\n        assert$4.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n};\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac$2 = (hash, key, message) => new HMAC$1(hash, key).update(message).digest();\nhmac$2.create = (hash, key) => new HMAC$1(hash, key);\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// connects noble-curves to noble-hashes\nfunction getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac$2(hash, key, concatBytes$1(...msgs)),\n        randomBytes,\n    };\n}\nfunction createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n$1 = BigInt(1);\nconst _2n$1 = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n$1) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n$1, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n$1, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field$1(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nconst secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n$1 * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256$3);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n$4 = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n$4 < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n$4 < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256$3(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256$3(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP$1 = (x) => mod(x, secp256k1P);\nconst modN$1 = (x) => mod(x, secp256k1N);\nconst Point$2 = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point$2.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point$2.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN$1(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP$1(x * x);\n    const c = modP$1(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n$1 !== _0n$4)\n        y = modP$1(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point$2(x, y, _1n$1); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN$1(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN$1(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n$4)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN$1(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN$1(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nconst schnorr = {\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n};\nconst isoMap = isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n});\ncreateHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256$3,\n});\n\nfunction number$1(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool$1(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes$1(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash$2(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number$1(hash.outputLen);\n    number$1(hash.blockLen);\n}\nfunction exists$1(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output$1(out, instance) {\n    bytes$1(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert$1$1 = {\n    number: number$1,\n    bool: bool$1,\n    bytes: bytes$1,\n    hash: hash$2,\n    exists: exists$1,\n    output: output$1,\n};\nvar assert$2 = assert$1$1;\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Cast array to view\nconst createView$1 = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr$1 = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nconst isLE$1 = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE$1)\n    throw new Error('Non little-endian hardware is not supported');\nArray.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction utf8ToBytes$1(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nfunction toBytes$1(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes$1(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n// For runtime check if class implements interface\nlet Hash$1 = class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n};\nfunction wrapConstructor$1(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes$1(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\n\n// Polyfill for Safari 14\nfunction setBigUint64$1(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nlet SHA2$1 = class SHA2 extends Hash$1 {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView$1(this.buffer);\n    }\n    update(data) {\n        assert$2.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes$1(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView$1(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert$2.exists(this);\n        assert$2.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64$1(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView$1(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n};\n\n// Choice: a ? b : c\nconst Chi$1 = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj$1 = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K$1 = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV$1 = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W$1 = new Uint32Array(64);\nlet SHA256$1 = class SHA256 extends SHA2$1 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV$1[0] | 0;\n        this.B = IV$1[1] | 0;\n        this.C = IV$1[2] | 0;\n        this.D = IV$1[3] | 0;\n        this.E = IV$1[4] | 0;\n        this.F = IV$1[5] | 0;\n        this.G = IV$1[6] | 0;\n        this.H = IV$1[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W$1[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W$1[i - 15];\n            const W2 = SHA256_W$1[i - 2];\n            const s0 = rotr$1(W15, 7) ^ rotr$1(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr$1(W2, 17) ^ rotr$1(W2, 19) ^ (W2 >>> 10);\n            SHA256_W$1[i] = (s1 + SHA256_W$1[i - 7] + s0 + SHA256_W$1[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr$1(E, 6) ^ rotr$1(E, 11) ^ rotr$1(E, 25);\n            const T1 = (H + sigma1 + Chi$1(E, F, G) + SHA256_K$1[i] + SHA256_W$1[i]) | 0;\n            const sigma0 = rotr$1(A, 2) ^ rotr$1(A, 13) ^ rotr$1(A, 22);\n            const T2 = (sigma0 + Maj$1(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W$1.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n};\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nlet SHA224$1 = class SHA224 extends SHA256$1 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n};\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256$2 = wrapConstructor$1(() => new SHA256$1());\nwrapConstructor$1(() => new SHA224$1());\n\nfunction within_size(data, size) {\n    if (data.length > size) {\n        throw new TypeError(`Data is larger than array size: ${data.length} > ${size}`);\n    }\n}\nfunction is_hex(hex) {\n    if (hex.match(/[^a-fA-f0-9]/) !== null) {\n        throw new TypeError('Invalid characters in hex string: ' + hex);\n    }\n    if (hex.length % 2 !== 0) {\n        throw new Error(`Length of hex string is invalid: ${hex.length}`);\n    }\n}\nfunction is_safe_num(num) {\n    if (num > Number.MAX_SAFE_INTEGER) {\n        throw new TypeError('Number exceeds safe bounds!');\n    }\n}\n\nconst { getRandomValues } = crypto ?? globalThis.crypto ?? window.crypto;\nfunction random$1(size = 32) {\n    if (typeof getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(size));\n    }\n    throw new Error('Crypto module missing getRandomValues!');\n}\nfunction set_buffer(data, size, endian = 'be') {\n    if (size === undefined)\n        size = data.length;\n    within_size(data, size);\n    const buffer = new Uint8Array(size).fill(0);\n    const offset = (endian === 'be') ? 0 : size - data.length;\n    buffer.set(data, offset);\n    return buffer;\n}\nfunction join_array(arr) {\n    let i, offset = 0;\n    const size = arr.reduce((len, arr) => len + arr.length, 0);\n    const buff = new Uint8Array(size);\n    for (i = 0; i < arr.length; i++) {\n        const a = arr[i];\n        buff.set(a, offset);\n        offset += a.length;\n    }\n    return buff;\n}\n\nconst ec$2 = new TextEncoder();\nconst ALPHABETS = [\n    {\n        name: 'base58',\n        charset: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n    }\n];\nfunction getAlphabet(name) {\n    for (const alpha of ALPHABETS) {\n        if (alpha.name === name) {\n            return alpha.charset;\n        }\n    }\n    throw TypeError('Charset does not exist: ' + name);\n}\nfunction encode$1(data, charset, padding = false) {\n    if (typeof data === 'string')\n        data = ec$2.encode(data);\n    const alphabet = getAlphabet(charset);\n    const len = alphabet.length;\n    const d = [];\n    let s = '', i, j = 0, c, n;\n    for (i = 0; i < data.length; i++) {\n        j = 0;\n        c = data[i];\n        s += (c > 0 || (s.length ^ i) > 0) ? '' : '1';\n        while (j in d || c > 0) {\n            n = d[j];\n            n = n > 0 ? n * 256 + c : c;\n            c = n / len | 0;\n            d[j] = n % len;\n            j++;\n        }\n    }\n    while (j-- > 0) {\n        s += alphabet[d[j]];\n    }\n    return (padding && s.length % 4 > 0)\n        ? s + '='.repeat(4 - s.length % 4)\n        : s;\n}\nfunction decode$1(encoded, charset) {\n    const alphabet = getAlphabet(charset);\n    const len = alphabet.length, d = [], b = [];\n    encoded = encoded.replace('=', '');\n    let i, j = 0, c, n;\n    for (i = 0; i < encoded.length; i++) {\n        j = 0;\n        c = alphabet.indexOf(encoded[i]);\n        if (c < 0) {\n            throw new Error(`Character range out of bounds: ${c}`);\n        }\n        if (!(c > 0 || (b.length ^ i) > 0))\n            b.push(0);\n        while (j in d || c > 0) {\n            n = d[j];\n            n = n > 0 ? n * len + c : c;\n            c = n >> 8;\n            d[j] = n % 256;\n            j++;\n        }\n    }\n    while (j-- > 0) {\n        b.push(d[j]);\n    }\n    return new Uint8Array(b);\n}\nfunction hash256$1(data) {\n    return sha256$2(sha256$2(data));\n}\nfunction addChecksum(data) {\n    const sum = hash256$1(data);\n    return join_array([data, sum.slice(0, 4)]);\n}\nfunction checkTheSum(data) {\n    const ret = data.slice(0, -4);\n    const chk = data.slice(-4);\n    const sum = hash256$1(ret).slice(0, 4);\n    if (sum.toString() !== chk.toString()) {\n        throw new Error('Invalid checksum!');\n    }\n    return ret;\n}\nconst BaseX = {\n    encode: encode$1,\n    decode: decode$1\n};\nconst Base58C = {\n    encode: (data) => {\n        const withSum = addChecksum(data);\n        return BaseX.encode(withSum, 'base58');\n    },\n    decode: (data) => {\n        const decoded = BaseX.decode(data, 'base58');\n        return checkTheSum(decoded);\n    }\n};\n\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nconst ENCODINGS = [\n    { version: 0, name: 'bech32', const: 1 },\n    { version: 1, name: 'bech32m', const: 0x2bc830a3 }\n];\nfunction polymod(values) {\n    let chk = 1;\n    for (let p = 0; p < values.length; ++p) {\n        const top = chk >> 25;\n        chk = (chk & 0x1ffffff) << 5 ^ values[p];\n        for (let i = 0; i < 5; ++i) {\n            if (((top >> i) & 1) !== 0) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n}\nfunction hrpExpand(hrp) {\n    const ret = [];\n    let p;\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) >> 5);\n    }\n    ret.push(0);\n    for (p = 0; p < hrp.length; ++p) {\n        ret.push(hrp.charCodeAt(p) & 31);\n    }\n    return ret;\n}\nfunction verifyChecksum(hrp, data, enc) {\n    const combined = hrpExpand(hrp).concat(data);\n    return polymod(combined) === enc.const;\n}\nfunction createChecksum(hrp, data, enc) {\n    const values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n    const mod = polymod(values) ^ enc.const;\n    const ret = [];\n    for (let p = 0; p < 6; ++p) {\n        ret.push((mod >> 5 * (5 - p)) & 31);\n    }\n    return ret;\n}\nfunction convertBits(data, fromBits, toBits, pad = true) {\n    const ret = [];\n    let acc = 0;\n    let bits = 0;\n    const maxVal = (1 << toBits) - 1;\n    const maxAcc = (1 << (fromBits + toBits - 1)) - 1;\n    for (const val of data) {\n        if (val < 0 || (val >> fromBits) > 0) {\n            throw new Error('Failed to perform base conversion. Invalid value: ' + String(val));\n        }\n        acc = ((acc << fromBits) | val) & maxAcc;\n        bits += fromBits;\n        while (bits >= toBits) {\n            bits -= toBits;\n            ret.push((acc >> bits) & maxVal);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            ret.push((acc << (toBits - bits)) & maxVal);\n        }\n    }\n    else if (bits >= fromBits || ((acc << (toBits - bits)) & maxVal) > 0) {\n        throw new Error('Failed to perform base conversion. Invalid Size!');\n    }\n    return ret;\n}\nfunction encode(hrp, data, enc) {\n    const combined = data.concat(createChecksum(hrp, data, enc));\n    let ret = hrp + '1';\n    for (let p = 0; p < combined.length; ++p) {\n        ret += CHARSET.charAt(combined[p]);\n    }\n    return ret;\n}\nfunction decode(bechstr) {\n    if (!checkBounds(bechstr)) {\n        throw new Error('Encoded string goes out of bounds!');\n    }\n    bechstr = bechstr.toLowerCase();\n    if (!checkSeparatorPos(bechstr)) {\n        throw new Error('Encoded string has invalid separator!');\n    }\n    const data = [];\n    const pos = bechstr.lastIndexOf('1');\n    const hrp = bechstr.substring(0, pos);\n    for (let p = pos + 1; p < bechstr.length; ++p) {\n        const d = CHARSET.indexOf(bechstr.charAt(p));\n        if (d === -1) {\n            throw new Error('Character idx out of bounds: ' + String(p));\n        }\n        data.push(d);\n    }\n    const enc = ENCODINGS.find(e => e.version === data[0]) ?? ENCODINGS[0];\n    if (!verifyChecksum(hrp, data, enc)) {\n        throw new Error('Checksum verification failed!');\n    }\n    return [hrp, data.slice(0, data.length - 6)];\n}\nfunction checkBounds(bechstr) {\n    let p;\n    let char;\n    let hasLower = false;\n    let hasUpper = false;\n    for (p = 0; p < bechstr.length; ++p) {\n        char = bechstr.charCodeAt(p);\n        if (char < 33 || char > 126) {\n            return false;\n        }\n        if (char >= 97 && char <= 122) {\n            hasLower = true;\n        }\n        if (char >= 65 && char <= 90) {\n            hasUpper = true;\n        }\n    }\n    if (hasLower && hasUpper)\n        return false;\n    return true;\n}\nfunction checkSeparatorPos(bechstr) {\n    const pos = bechstr.lastIndexOf('1');\n    return !(pos < 1 ||\n        pos + 7 > bechstr.length ||\n        bechstr.length > 90);\n}\nfunction b32encode(data, hrp = 'bc', version = 0) {\n    const dat = [version, ...convertBits([...data], 8, 5)];\n    const enc = ENCODINGS.find(e => e.version === version) ?? ENCODINGS[0];\n    const str = encode(hrp, dat, enc);\n    b32decode(str);\n    return str;\n}\nfunction b32decode(str) {\n    str = str.toLowerCase();\n    const hrp = str.split('1', 1)[0];\n    const [hrpgot, data] = decode(str);\n    const decoded = convertBits(data.slice(1), 5, 8, false);\n    const length = decoded.length;\n    switch (true) {\n        case (hrp !== hrpgot):\n            throw new Error('Returned hrp string is invalid.');\n        case (decoded === null || length < 2 || length > 40):\n            throw new Error('Decoded string is invalid or out of spec.');\n        case (data[0] > 16):\n            throw new Error('Returned version bit is out of range.');\n        default:\n            return Uint8Array.from(decoded);\n    }\n}\nfunction getVersion(str) {\n    str = str.toLowerCase();\n    const [_, data] = decode(str);\n    return data[0];\n}\nconst Bech32 = {\n    encode: b32encode,\n    decode: b32decode,\n    version: getVersion\n};\n\nconst BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst B64URL_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\nconst ec$1 = new TextEncoder();\nfunction b64encode(input, urlSafe = false, padding = true) {\n    if (typeof input === 'string')\n        input = ec$1.encode(input);\n    const map = urlSafe ? B64URL_MAP : BASE64_MAP;\n    let output = '';\n    let bits = 0;\n    let buffer = 0;\n    for (let i = 0; i < input.length; i++) {\n        buffer = (buffer << 8) | input[i];\n        bits += 8;\n        while (bits >= 6) {\n            bits -= 6;\n            output += map[(buffer >> bits) & 0x3f];\n        }\n    }\n    if (bits > 0) {\n        buffer <<= 6 - bits;\n        output += map[buffer & 0x3f];\n        while (bits < 6) {\n            output += padding ? '=' : '';\n            bits += 2;\n        }\n    }\n    return output;\n}\nfunction b64decode(input, urlSafe = false) {\n    const map = (urlSafe || input.includes('-') || input.includes('_'))\n        ? B64URL_MAP.split('')\n        : BASE64_MAP.split('');\n    input = input.replace(/=+$/, '');\n    const chars = input.split('');\n    let bits = 0;\n    let value = 0;\n    const bytes = [];\n    for (let i = 0; i < chars.length; i++) {\n        const c = chars[i];\n        const index = map.indexOf(c);\n        if (index === -1) {\n            throw new Error('Invalid character: ' + c);\n        }\n        bits += 6;\n        value <<= 6;\n        value |= index;\n        if (bits >= 8) {\n            bits -= 8;\n            bytes.push((value >>> bits) & 0xff);\n        }\n    }\n    return new Uint8Array(bytes);\n}\nconst Base64 = {\n    encode: b64encode,\n    decode: b64decode\n};\nconst B64URL = {\n    encode: (data) => b64encode(data, true, false),\n    decode: (data) => b64decode(data, true)\n};\n\nconst _0n$3 = BigInt(0);\nconst _255n = BigInt(255);\nconst _256n = BigInt(256);\nfunction big_size(big) {\n    if (big <= 0xffn)\n        return 1;\n    if (big <= 0xffffn)\n        return 2;\n    if (big <= 0xffffffffn)\n        return 4;\n    if (big <= 0xffffffffffffffffn)\n        return 8;\n    if (big <= 0xffffffffffffffffffffffffffffffffn)\n        return 16;\n    if (big <= 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn) {\n        return 32;\n    }\n    throw new TypeError('Must specify a fixed buffer size for bigints greater than 32 bytes.');\n}\nfunction bigToBytes(big, size, endian = 'be') {\n    if (size === undefined)\n        size = big_size(big);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    while (big > _0n$3) {\n        const byte = big & _255n;\n        const num = Number(byte);\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n        big = (big - byte) / _256n;\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToBig(bytes) {\n    let num = BigInt(0);\n    for (let i = bytes.length - 1; i >= 0; i--) {\n        num = (num * _256n) + BigInt(bytes[i]);\n    }\n    return BigInt(num);\n}\n\nfunction binToBytes(binary) {\n    const bins = binary.split('').map(Number);\n    if (bins.length % 8 !== 0) {\n        throw new Error(`Binary array is invalid length: ${binary.length}`);\n    }\n    const bytes = new Uint8Array(bins.length / 8);\n    for (let i = 0, ct = 0; i < bins.length; i += 8, ct++) {\n        let byte = 0;\n        for (let j = 0; j < 8; j++) {\n            byte |= (bins[i + j] << (7 - j));\n        }\n        bytes[ct] = byte;\n    }\n    return bytes;\n}\nfunction bytesToBin(bytes) {\n    const bin = new Array(bytes.length * 8);\n    let count = 0;\n    for (const num of bytes) {\n        if (num > 255) {\n            throw new Error(`Invalid byte value: ${num}. Byte values must be between 0 and 255.`);\n        }\n        for (let i = 7; i >= 0; i--, count++) {\n            bin[count] = (num >> i) & 1;\n        }\n    }\n    return bin.join('');\n}\n\nfunction num_size(num) {\n    if (num <= 0xFF)\n        return 1;\n    if (num <= 0xFFFF)\n        return 2;\n    if (num <= 0xFFFFFFFF)\n        return 4;\n    throw new TypeError('Numbers larger than 4 bytes must specify a fixed size!');\n}\nfunction numToBytes(num, size, endian = 'be') {\n    if (size === undefined)\n        size = num_size(num);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    while (num > 0) {\n        const byte = num & 255;\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n        num = (num - byte) / 256;\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToNum(bytes) {\n    let num = 0;\n    for (let i = bytes.length - 1; i >= 0; i--) {\n        num = (num * 256) + bytes[i];\n        is_safe_num(num);\n    }\n    return num;\n}\n\nconst ec = new TextEncoder();\nconst dc = new TextDecoder();\nfunction strToBytes(str) {\n    return ec.encode(str);\n}\nfunction bytesToStr(bytes) {\n    return dc.decode(bytes);\n}\nfunction hex_size(hexstr, size) {\n    is_hex(hexstr);\n    const len = hexstr.length / 2;\n    if (size === undefined)\n        size = len;\n    if (len > size) {\n        throw new TypeError(`Hex string is larger than array size: ${len} > ${size}`);\n    }\n    return size;\n}\nfunction hexToBytes(hexstr, size, endian = 'le') {\n    size = hex_size(hexstr, size);\n    const use_le = (endian === 'le');\n    const buffer = new ArrayBuffer(size);\n    const dataView = new DataView(buffer);\n    let offset = (use_le) ? 0 : size - 1;\n    for (let i = 0; i < hexstr.length; i += 2) {\n        const char = hexstr.substring(i, i + 2);\n        const num = parseInt(char, 16);\n        if (use_le) {\n            dataView.setUint8(offset++, num);\n        }\n        else {\n            dataView.setUint8(offset--, num);\n        }\n    }\n    return new Uint8Array(buffer);\n}\nfunction bytesToHex(bytes) {\n    let chars = '';\n    for (let i = 0; i < bytes.length; i++) {\n        chars += bytes[i].toString(16).padStart(2, '0');\n    }\n    return chars;\n}\nfunction jsonToBytes(obj) {\n    const str = JSON.stringify(obj, (_, v) => {\n        return typeof v === 'bigint'\n            ? `${v}n`\n            : v;\n    });\n    return strToBytes(str);\n}\n\nfunction buffer(data, size, endian) {\n    if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    if (data instanceof Uint8Array) {\n        return set_buffer(data, size, endian);\n    }\n    if (typeof data === 'string') {\n        return hexToBytes(data, size, endian);\n    }\n    if (typeof data === 'bigint') {\n        return bigToBytes(data, size, endian);\n    }\n    if (typeof data === 'number') {\n        return numToBytes(data, size, endian);\n    }\n    if (typeof data === 'boolean') {\n        return Uint8Array.of(data ? 1 : 0);\n    }\n    throw TypeError('Unsupported format:' + String(typeof data));\n}\n\nclass Buff extends Uint8Array {\n    static { this.num = numToBuff; }\n    static { this.big = bigToBuff; }\n    static { this.bin = binToBuff; }\n    static { this.raw = rawToBuff; }\n    static { this.str = strToBuff; }\n    static { this.hex = hexToBuff; }\n    static { this.bytes = bytesToBuff; }\n    static { this.json = jsonToBuff; }\n    static { this.base64 = base64ToBuff; }\n    static { this.b64url = b64urlToBuff; }\n    static { this.bech32 = bech32ToBuff; }\n    static { this.b58chk = b58chkToBuff; }\n    static { this.encode = strToBytes; }\n    static { this.decode = bytesToStr; }\n    static random(size = 32) {\n        const rand = random$1(size);\n        return new Buff(rand, size);\n    }\n    constructor(data, size, endian) {\n        const buffer$1 = buffer(data, size, endian);\n        super(buffer$1);\n    }\n    get arr() {\n        return [...this];\n    }\n    get num() {\n        return this.toNum();\n    }\n    get big() {\n        return this.toBig();\n    }\n    get str() {\n        return this.toStr();\n    }\n    get hex() {\n        return this.toHex();\n    }\n    get raw() {\n        return new Uint8Array(this);\n    }\n    get bin() {\n        return this.toBin();\n    }\n    get b58chk() {\n        return this.tob58chk();\n    }\n    get base64() {\n        return this.toBase64();\n    }\n    get b64url() {\n        return this.toB64url();\n    }\n    get digest() {\n        return this.toHash();\n    }\n    get id() {\n        return this.toHash().hex;\n    }\n    get stream() {\n        return new Stream(this);\n    }\n    toNum(endian = 'be') {\n        const bytes = (endian === 'be')\n            ? this.reverse()\n            : this;\n        return bytesToNum(bytes);\n    }\n    toBin() {\n        return bytesToBin(this);\n    }\n    toBig(endian = 'be') {\n        const bytes = (endian === 'be')\n            ? this.reverse()\n            : this;\n        return bytesToBig(bytes);\n    }\n    toHash() {\n        const digest = sha256$2(this);\n        return new Buff(digest);\n    }\n    toJson() {\n        const str = bytesToStr(this);\n        return JSON.parse(str);\n    }\n    toBech32(hrp, version = 0) {\n        return Bech32.encode(this, hrp, version);\n    }\n    toStr() { return bytesToStr(this); }\n    toHex() { return bytesToHex(this); }\n    toBytes() { return new Uint8Array(this); }\n    tob58chk() { return Base58C.encode(this); }\n    toBase64() { return Base64.encode(this); }\n    toB64url() { return B64URL.encode(this); }\n    prepend(data) {\n        return Buff.join([Buff.bytes(data), this]);\n    }\n    append(data) {\n        return Buff.join([this, Buff.bytes(data)]);\n    }\n    slice(start, end) {\n        const arr = new Uint8Array(this).slice(start, end);\n        return new Buff(arr);\n    }\n    subarray(begin, end) {\n        const arr = new Uint8Array(this).subarray(begin, end);\n        return new Buff(arr);\n    }\n    reverse() {\n        const arr = new Uint8Array(this).reverse();\n        return new Buff(arr);\n    }\n    write(bytes, offset) {\n        const b = Buff.bytes(bytes);\n        this.set(b, offset);\n    }\n    prefixSize(endian) {\n        const size = Buff.varInt(this.length, endian);\n        return Buff.join([size, this]);\n    }\n    static from(data) {\n        return new Buff(Uint8Array.from(data));\n    }\n    static of(...args) {\n        return new Buff(Uint8Array.of(...args));\n    }\n    static join(arr) {\n        const bytes = arr.map(e => Buff.bytes(e));\n        const joined = join_array(bytes);\n        return new Buff(joined);\n    }\n    static varInt(num, endian) {\n        if (num < 0xFD) {\n            return Buff.num(num, 1);\n        }\n        else if (num < 0x10000) {\n            return Buff.of(0xFD, ...Buff.num(num, 2, endian));\n        }\n        else if (num < 0x100000000) {\n            return Buff.of(0xFE, ...Buff.num(num, 4, endian));\n        }\n        else if (BigInt(num) < 0x10000000000000000n) {\n            return Buff.of(0xFF, ...Buff.num(num, 8, endian));\n        }\n        else {\n            throw new Error(`Value is too large: ${num}`);\n        }\n    }\n}\nfunction numToBuff(number, size, endian) {\n    return new Buff(number, size, endian);\n}\nfunction binToBuff(data, size, endian) {\n    return new Buff(binToBytes(data), size, endian);\n}\nfunction bigToBuff(bigint, size, endian) {\n    return new Buff(bigint, size, endian);\n}\nfunction rawToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction strToBuff(data, size, endian) {\n    return new Buff(strToBytes(data), size, endian);\n}\nfunction hexToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction bytesToBuff(data, size, endian) {\n    return new Buff(data, size, endian);\n}\nfunction jsonToBuff(data) {\n    return new Buff(jsonToBytes(data));\n}\nfunction base64ToBuff(data) {\n    return new Buff(Base64.decode(data));\n}\nfunction b64urlToBuff(data) {\n    return new Buff(B64URL.decode(data));\n}\nfunction bech32ToBuff(data) {\n    return new Buff(Bech32.decode(data));\n}\nfunction b58chkToBuff(data) {\n    return new Buff(Base58C.decode(data));\n}\nclass Stream {\n    constructor(data) {\n        this.data = Buff.bytes(data);\n        this.size = this.data.length;\n    }\n    peek(size) {\n        if (size > this.size) {\n            throw new Error(`Size greater than stream: ${size} > ${this.size}`);\n        }\n        return new Buff(this.data.slice(0, size));\n    }\n    read(size) {\n        size = size ?? this.readSize();\n        const chunk = this.peek(size);\n        this.data = this.data.slice(size);\n        this.size = this.data.length;\n        return chunk;\n    }\n    readSize(endian) {\n        const num = this.read(1).num;\n        switch (true) {\n            case (num >= 0 && num < 0xFD):\n                return num;\n            case (num === 0xFD):\n                return this.read(2).toNum(endian);\n            case (num === 0xFE):\n                return this.read(4).toNum(endian);\n            case (num === 0xFF):\n                return this.read(8).toNum(endian);\n            default:\n                throw new Error(`Varint is out of range: ${num}`);\n        }\n    }\n}\n\nconst curve = secp256k1.CURVE;\nconst N$1 = curve.n;\nconst P$1 = curve.p;\nconst G = { x: curve.Gx, y: curve.Gy };\nconst _0n$2 = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _4n = BigInt(4);\nconst CONST = { N: N$1, P: P$1, G, _0n: _0n$2, _1n, _2n, _3n, _4n };\nconst ecc = Field$1(N$1, 32, true);\nconst Point$1 = secp256k1.ProjectivePoint;\nconst modN = (x) => mod(x, N$1);\nconst modP = (x) => mod(x, P$1);\nconst powN = (x, exp) => pow(x, exp, N$1);\nconst on_curve = (x) => {\n    return typeof x === 'bigint' && _0n$2 < x && x < P$1;\n};\nconst in_field$1 = (x) => {\n    return typeof x === 'bigint' && _0n$2 < x && x < N$1;\n};\n\nvar math = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CONST: CONST,\n    Point: Point$1,\n    curve: curve,\n    ecc: ecc,\n    in_field: in_field$1,\n    invert: invert,\n    mod: mod,\n    modN: modN,\n    modP: modP,\n    on_curve: on_curve,\n    pow: pow,\n    pow2: pow2,\n    powN: powN\n});\n\nfunction fail(error, throws = false) {\n    if (throws) {\n        throw new Error(error);\n    }\n    else {\n        return false;\n    }\n}\nfunction random(size) {\n    return Buff.random(size);\n}\nfunction mod_bytes(bytes) {\n    const b = Buff.bytes(bytes).big;\n    return Buff.big(modN(b), 32);\n}\n\nvar utl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fail: fail,\n    mod_bytes: mod_bytes,\n    random: random\n});\n\nconst { N, P, _0n: _0n$1 } = CONST;\nfunction size(input, size, throws) {\n    const bytes = Buff.bytes(input);\n    if (bytes.length !== size) {\n        return fail(`Invalid byte size: ${bytes.hex} !== ${size}`, throws);\n    }\n    return true;\n}\nfunction in_field(x, throws) {\n    if (!(typeof x === 'bigint' && _0n$1 < x && x < N)) {\n        fail('x value is not in the field!', throws);\n    }\n    return true;\n}\n\nconst NoblePoint = secp256k1.ProjectivePoint;\nclass Field extends Uint8Array {\n    static { this.N = secp256k1.CURVE.n; }\n    static mod(x) {\n        return new Field(x);\n    }\n    static is_valid(value, throws) {\n        const big = Buff.bytes(value, 32).big;\n        return in_field(big, throws);\n    }\n    constructor(x) {\n        let b = normalizeField(x);\n        b = modN(b);\n        Field.is_valid(b, true);\n        super(Buff.big(b, 32), 32);\n    }\n    get buff() {\n        return new Buff(this);\n    }\n    get raw() {\n        return this.buff.raw;\n    }\n    get big() {\n        return this.buff.big;\n    }\n    get hex() {\n        return this.buff.hex;\n    }\n    get point() {\n        return this.generate();\n    }\n    get hasOddY() {\n        return this.point.hasOddY;\n    }\n    get negated() {\n        return (this.hasOddY)\n            ? this.negate()\n            : this;\n    }\n    gt(value) {\n        const x = new Field(value);\n        return x.big > this.big;\n    }\n    lt(value) {\n        const x = new Field(value);\n        return x.big < this.big;\n    }\n    eq(value) {\n        const x = new Field(value);\n        return x.big === this.big;\n    }\n    ne(value) {\n        const x = new Field(value);\n        return x.big !== this.big;\n    }\n    add(value) {\n        const x = Field.mod(value);\n        const a = ecc.add(this.big, x.big);\n        return new Field(a);\n    }\n    sub(value) {\n        const x = Field.mod(value);\n        const a = ecc.sub(this.big, x.big);\n        return new Field(a);\n    }\n    mul(value) {\n        const x = Field.mod(value);\n        const a = ecc.mul(this.big, x.big);\n        return new Field(a);\n    }\n    pow(value) {\n        const x = Field.mod(value);\n        const a = ecc.pow(this.big, x.big);\n        return new Field(a);\n    }\n    div(value) {\n        const x = Field.mod(value);\n        const a = ecc.div(this.big, x.big);\n        return new Field(a);\n    }\n    negate() {\n        return new Field(Field.N - this.big);\n    }\n    generate() {\n        const base = secp256k1.ProjectivePoint.BASE;\n        const point = base.multiply(this.big);\n        return Point.import(point);\n    }\n}\nclass Point {\n    static { this.P = CONST.P; }\n    static { this.G = CONST.G; }\n    static { this.base = secp256k1.ProjectivePoint.BASE; }\n    static from_x(bytes) {\n        let cp = normalizePoint(bytes);\n        if (cp.length === 32) {\n            cp = cp.prepend(0x02);\n        }\n        size(cp, 33);\n        const point = NoblePoint.fromHex(cp.hex);\n        point.assertValidity();\n        return new Point(point.x, point.y);\n    }\n    static generate(value) {\n        const field = Field.mod(value);\n        const point = Point.base.multiply(field.big);\n        return Point.import(point);\n    }\n    static import(point) {\n        const p = (point instanceof Point)\n            ? { x: point.x.big, y: point.y.big }\n            : { x: point.x, y: point.y };\n        return new Point(p.x, p.y);\n    }\n    constructor(x, y) {\n        this._p = new NoblePoint(x, y, 1n);\n        this.p.assertValidity();\n    }\n    get p() {\n        return this._p;\n    }\n    get x() {\n        return Buff.big(this.p.x, 32);\n    }\n    get y() {\n        return Buff.big(this.p.y, 32);\n    }\n    get buff() {\n        return Buff.raw(this.p.toRawBytes(true));\n    }\n    get raw() {\n        return this.buff.raw;\n    }\n    get hex() {\n        return this.buff.hex;\n    }\n    get hasEvenY() {\n        return this.p.hasEvenY();\n    }\n    get hasOddY() {\n        return !this.p.hasEvenY();\n    }\n    eq(value) {\n        const p = (value instanceof Point) ? value : Point.from_x(value);\n        return this.x.big === p.x.big && this.y.big === p.y.big;\n    }\n    add(x) {\n        return (x instanceof Point)\n            ? Point.import(this.p.add(x.p))\n            : Point.import(this.p.add(Point.generate(x).p));\n    }\n    sub(x) {\n        return (x instanceof Point)\n            ? Point.import(this.p.subtract(x.p))\n            : Point.import(this.p.subtract(Point.generate(x).p));\n    }\n    mul(value) {\n        return (value instanceof Point)\n            ? Point.import(this.p.multiply(value.x.big))\n            : Point.import(this.p.multiply(Field.mod(value).big));\n    }\n    negate() {\n        return Point.import(this.p.negate());\n    }\n}\nfunction normalizeField(value) {\n    if (value instanceof Field) {\n        return value.big;\n    }\n    if (value instanceof Point) {\n        return value.x.big;\n    }\n    if (value instanceof Uint8Array) {\n        return Buff.raw(value).big;\n    }\n    if (typeof value === 'string') {\n        return Buff.hex(value).big;\n    }\n    if (typeof value === 'number') {\n        return Buff.num(value).big;\n    }\n    if (typeof value === 'bigint') {\n        return BigInt(value);\n    }\n    throw TypeError('Invalid input type:' + typeof value);\n}\nfunction normalizePoint(value) {\n    if (value instanceof Field) {\n        return value.point.buff;\n    }\n    if (value instanceof Point) {\n        return value.buff;\n    }\n    if (value instanceof Uint8Array ||\n        typeof value === 'string') {\n        return Buff.bytes(value);\n    }\n    if (typeof value === 'number' ||\n        typeof value === 'bigint') {\n        return Buff.bytes(value, 32);\n    }\n    throw new TypeError(`Unknown type: ${typeof value}`);\n}\n\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash$1(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash: hash$1,\n    exists,\n    output,\n};\nvar assert$1 = assert;\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nArray.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\n\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert$1.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert$1.exists(this);\n        assert$1.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nconst sha256$1 = wrapConstructor(() => new SHA256());\nwrapConstructor(() => new SHA224());\n\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nvar u64$1 = u64;\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64$1.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64$1.rotrSH(W15h, W15l, 1) ^ u64$1.rotrSH(W15h, W15l, 8) ^ u64$1.shrSH(W15h, W15l, 7);\n            const s0l = u64$1.rotrSL(W15h, W15l, 1) ^ u64$1.rotrSL(W15h, W15l, 8) ^ u64$1.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64$1.rotrSH(W2h, W2l, 19) ^ u64$1.rotrBH(W2h, W2l, 61) ^ u64$1.shrSH(W2h, W2l, 6);\n            const s1l = u64$1.rotrSL(W2h, W2l, 19) ^ u64$1.rotrBL(W2h, W2l, 61) ^ u64$1.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64$1.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64$1.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64$1.rotrSH(Eh, El, 14) ^ u64$1.rotrSH(Eh, El, 18) ^ u64$1.rotrBH(Eh, El, 41);\n            const sigma1l = u64$1.rotrSL(Eh, El, 14) ^ u64$1.rotrSL(Eh, El, 18) ^ u64$1.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64$1.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64$1.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64$1.rotrSH(Ah, Al, 28) ^ u64$1.rotrBH(Ah, Al, 34) ^ u64$1.rotrBH(Ah, Al, 39);\n            const sigma0l = u64$1.rotrSL(Ah, Al, 28) ^ u64$1.rotrBL(Ah, Al, 34) ^ u64$1.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64$1.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64$1.add3L(T1l, sigma0l, MAJl);\n            Ah = u64$1.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64$1.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64$1.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64$1.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64$1.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64$1.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64$1.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64$1.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64$1.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nconst sha512$1 = wrapConstructor(() => new SHA512());\nwrapConstructor(() => new SHA512_224());\nwrapConstructor(() => new SHA512_256());\nwrapConstructor(() => new SHA384());\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nclass RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nconst ripemd160 = wrapConstructor(() => new RIPEMD160());\n\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert$1.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert$1.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert$1.exists(this);\n        assert$1.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac$1 = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac$1.create = (hash, key) => new HMAC(hash, key);\n\nfunction sha256(msg) {\n    const b = Buff.bytes(msg);\n    return Buff.raw(sha256$1(b));\n}\nfunction sha512(msg) {\n    const b = Buff.bytes(msg);\n    return Buff.raw(sha512$1(b));\n}\nfunction ripe160(msg) {\n    const b = Buff.bytes(msg);\n    return Buff.raw(sha512$1(b));\n}\nfunction hash256(msg) {\n    const b = Buff.bytes(msg);\n    return Buff.raw(sha256$1(sha256$1(b)));\n}\nfunction hash160(msg) {\n    const b = Buff.bytes(msg);\n    return Buff.raw(ripemd160(sha256$1(b)));\n}\nfunction hmac256(key, msg) {\n    const k = Buff.bytes(key);\n    const b = Buff.bytes(msg);\n    return Buff.raw(hmac$1(sha256$1, k, b));\n}\nfunction hmac512(key, msg) {\n    const k = Buff.bytes(key);\n    const b = Buff.bytes(msg);\n    return Buff.raw(hmac$1(sha512$1, k, b));\n}\nfunction hash(data, type = 'sha256') {\n    switch (type) {\n        case 'sha256':\n            return sha256(data);\n        case 'sha512':\n            return sha512(data);\n        case 'hash256':\n            return hash256(data);\n        case 'ripe160':\n            return ripe160(data);\n        case 'hash160':\n            return hash160(data);\n        default:\n            throw new Error('Unrecognized format:' + String(type));\n    }\n}\nfunction hmac(key, data, type = 'hmac256') {\n    switch (type) {\n        case 'hmac256':\n            return hmac256(key, data);\n        case 'hmac512':\n            return hmac512(key, data);\n        default:\n            throw new Error('Unrecognized format:' + String(type));\n    }\n}\nfunction hashtag(tag) {\n    const hash = Buff.str(tag).digest;\n    return Buff.join([hash, hash]);\n}\nfunction digest(tag, data = []) {\n    const hash = hashtag(tag);\n    return Buff.join([hash, ...data]).digest;\n}\n\nfunction genSecretKey(size = 32) {\n    return getSecretKey(random(size));\n}\nfunction getSecretKey(secret) {\n    return Field.mod(secret).buff;\n}\nfunction getPublicKey(seckey, xonly = false) {\n    const p = Field.mod(seckey).point;\n    return (xonly) ? p.x : p.buff;\n}\nfunction getSharedKey(seckey, pubkey) {\n    const P = Point.from_x(pubkey);\n    const sp = Field.mod(seckey);\n    const sh = P.mul(sp);\n    return sh.buff;\n}\nfunction getSharedCode(self_sec, peer_pub, tag = 'ecdh/code') {\n    const hash = hashtag(tag);\n    const sec = getSecretKey(self_sec);\n    const pub = getPublicKey(sec);\n    const peer = Buff.bytes(peer_pub);\n    const link = getSharedKey(sec, peer);\n    const keys = [pub.hex, peer.hex];\n    keys.sort();\n    return hmac512(link, Buff.join([hash, ...keys]));\n}\nfunction is_even_pub(pubkey) {\n    const pub = Buff.bytes(pubkey);\n    switch (true) {\n        case (pub.length === 32):\n            return true;\n        case (pub.length === 33 && pub[0] === 0x02):\n            return true;\n        case (pub.length === 33 && pub[0] === 0x03):\n            return false;\n        default:\n            throw new TypeError(`Invalid public key: ${pub.hex}`);\n    }\n}\nfunction xonly_pub(pubkey) {\n    const key = Buff.bytes(pubkey);\n    switch (key.length) {\n        case 32:\n            return key;\n        case 33:\n            return key.slice(1, 33);\n        default:\n            throw new Error(`Invalid key length: ${key.length}`);\n    }\n}\n\nvar key = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    genSecretKey: genSecretKey,\n    getPublicKey: getPublicKey,\n    getSecretKey: getSecretKey,\n    getSharedCode: getSharedCode,\n    getSharedKey: getSharedKey,\n    is_even_pub: is_even_pub,\n    xonly_pub: xonly_pub\n});\n\nconst SIGNER_DEFAULTS = {\n    aux: Buff.random(32),\n    throws: false,\n    xonly: true\n};\nfunction signer_defaults(config = {}) {\n    return { ...SIGNER_DEFAULTS, ...config };\n}\n\nconst { _0n } = CONST;\nfunction sign(message, secret, config) {\n    const opt = signer_defaults(config);\n    const { adaptor, tweak, xonly } = opt;\n    const m = Buff.bytes(message);\n    let dp = Field.mod(secret);\n    if (tweak !== undefined) {\n        if (xonly)\n            dp = dp.negated;\n        dp = dp.add(tweak);\n    }\n    const P = dp.point;\n    const d = (xonly) ? dp.negated.big : dp.big;\n    const n = compute_nonce(Buff.big(d, 32), P.x, m, config);\n    let kp = Field.mod(n);\n    if (adaptor !== undefined) {\n        if (xonly)\n            kp = kp.negated;\n        kp = kp.add(adaptor);\n    }\n    const R = kp.point;\n    const k = (xonly) ? kp.negated.big : kp.big;\n    const ch = digest('BIP0340/challenge', [R.x.raw, P.x.raw, m]);\n    const c = Field.mod(ch);\n    const s = Field.mod(k + (c.big * d));\n    const rx = (xonly) ? R.x.raw : R.raw;\n    return Buff.join([rx, s.raw]);\n}\nfunction verify(signature, message, pubkey, config) {\n    const { throws } = signer_defaults(config);\n    const msg = Buff.bytes(message);\n    const sig = Buff.bytes(signature);\n    if (sig.length < 64) {\n        return fail('Signature length is too small: ' + String(sig.length), throws);\n    }\n    size(pubkey, 32);\n    const P = Point.from_x(pubkey);\n    const rx = sig.subarray(0, 32);\n    const R = Point.from_x(rx);\n    const s = sig.subarray(32, 64);\n    const sG = Field.mod(s).point;\n    const ch = digest('BIP0340/challenge', [R.x, P.x, msg]);\n    const c = Field.mod(ch);\n    const eP = P.mul(c.big);\n    const r = sG.sub(eP);\n    if (R.hasOddY) {\n        return fail('Signature R value has odd Y coordinate!', throws);\n    }\n    if (R.x.big === _0n) {\n        return fail('Signature R value is infinite!', throws);\n    }\n    if (R.x.big !== r.x.big) {\n        return fail(`Signature is invalid! R: ${R.x.hex} r:${r.x.hex}`, throws);\n    }\n    return R.x.big === r.x.big;\n}\nfunction recover(signature, message, pub_key, rec_key) {\n    const sig = Buff.bytes(signature);\n    const msg = Buff.bytes(message);\n    const pub = Buff.bytes(pub_key);\n    const seed = getSharedCode(rec_key, pub_key, 'ecdh/recovery');\n    const nonce = digest('BIP0340/nonce', [seed, message]);\n    const chal = digest('BIP0340/challenge', [sig.slice(0, 32), xonly_pub(pub), msg]);\n    const c = new Field(chal);\n    const k = new Field(nonce).negated;\n    const s = new Field(sig.slice(32, 64));\n    return s.sub(k).div(c).buff;\n}\nfunction compute_nonce(secret, pubkey, message, config) {\n    const { aux, nonce, recovery } = signer_defaults(config);\n    let n;\n    if (nonce !== undefined) {\n        n = Buff.bytes(nonce);\n    }\n    else if (recovery !== undefined) {\n        n = getSharedCode(secret, recovery, 'ecdh/recovery');\n    }\n    else {\n        const a = digest('BIP0340/aux', [aux ?? Buff.random(32)]);\n        const t = Buff.bytes(secret).big ^ a.big;\n        n = Buff.join([t, pubkey]);\n    }\n    return digest('BIP0340/nonce', [n, Buff.bytes(message)]);\n}\n\nvar sig = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    recover: recover,\n    sign: sign,\n    verify: verify\n});\n\nconst noble = { secp: secp256k1, schnorr };\nconst util = { ...key, ...utl };\n\nexport { Field, Point, SIGNER_DEFAULTS, digest, hash, hash160, hash256, hashtag, hmac, hmac256, hmac512, math, noble, ripe160, sha256, sha512, sig, signer_defaults, util };\n//# sourceMappingURL=module.mjs.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n",null,null],"names":["number","n","Number","isSafeInteger","Error","bytes","b","lengths","Uint8Array","TypeError","length","includes","assert$1","bool","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","assert$2","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","Uint32Array","toBytes","data","str","TextEncoder","encode","utf8ToBytes","Array","from","v","i","toString","padStart","Hash$3","clone","this","_cloneInto","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","Hash","constructor","padOffset","isLE","super","pos","view","len","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","res","slice","destroy","to","Maj","a","c","SHA256_K","IV","SHA256_W","SHA2","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","SHA256","sha256","is_safe_num","num","MAX_SAFE_INTEGER","SHA224","getRandomValues","crypto","globalThis","window","set_buffer","size","endian","undefined","within_size","join_array","reduce","buff","ec$2","ALPHABETS","name","charset","getAlphabet","alpha","hash256","BaseX","padding","alphabet","d","s","j","repeat","decode","encoded","replace","indexOf","push","Base58C","withSum","addChecksum","ret","chk","checkTheSum","CHARSET","GENERATOR","ENCODINGS","version","const","polymod","values","p","top","hrpExpand","hrp","charCodeAt","convertBits","fromBits","toBits","pad","acc","bits","maxVal","maxAcc","val","String","enc","combined","concat","mod","createChecksum","charAt","bechstr","char","hasLower","hasUpper","checkBounds","lastIndexOf","checkSeparatorPos","toLowerCase","substring","find","e","verifyChecksum","b32decode","split","hrpgot","decoded","Bech32","_","BASE64_MAP","B64URL_MAP","ec$1","b64encode","input","urlSafe","map","b64decode","chars","index","Base64","B64URL","_0n","_255n","_256n","bigToBytes","big","big_size","use_le","ArrayBuffer","byte","setUint8","numToBytes","num_size","ec","dc","TextDecoder","strToBytes","bytesToStr","hex_size","hexstr","hex","match","is_hex","parseInt","hexToBytes","of","Buff","numToBuff","bigToBuff","bin","binToBuff","raw","rawToBuff","strToBuff","hexToBuff","bytesToBuff","json","jsonToBuff","base64","base64ToBuff","b64url","b64urlToBuff","bech32","bech32ToBuff","b58chk","b58chkToBuff","random","rand","toNum","toBig","toStr","toHex","toBin","tob58chk","toBase64","toB64url","toHash","id","stream","Stream","bytesToNum","reverse","count","join","bytesToBin","bytesToBig","toJson","JSON","parse","toBech32","bytesToHex","prepend","append","start","end","begin","write","prefixSize","varInt","args","joined","binary","bins","ct","binToBytes","bigint","obj","stringify","Stream$1","peek","read","readSize","chunk","checkSize","safeThrow","errorMsg","shouldThrow","hashTag","tag","htag","OPCODE_MAP","OP_0","OP_PUSHDATA1","OP_PUSHDATA2","OP_PUSHDATA4","OP_1NEGATE","OP_SUCCESS80","OP_1","OP_2","OP_3","OP_4","OP_5","OP_6","OP_7","OP_8","OP_9","OP_10","OP_11","OP_12","OP_13","OP_14","OP_15","OP_16","OP_NOP","OP_SUCCESS98","OP_IF","OP_NOTIF","OP_ELSE","OP_ENDIF","OP_VERIFY","OP_RETURN","OP_TOALTSTACK","OP_FROMALTSTACK","OP_2DROP","OP_2DUP","OP_3DUP","OP_2OVER","OP_2ROT","OP_2SWAP","OP_IFDUP","OP_DEPTH","OP_DROP","OP_DUP","OP_NIP","OP_OVER","OP_PICK","OP_ROLL","OP_ROT","OP_SWAP","OP_TUCK","OP_SUCCESS126","OP_SUCCESS127","OP_SUCCESS128","OP_SUCCESS129","OP_SIZE","OP_SUCCESS131","OP_SUCCESS132","OP_SUCCESS133","OP_SUCCESS134","OP_EQUAL","OP_EQUALVERIFY","OP_SUCCESS137","OP_SUCCESS138","OP_1ADD","OP_1SUB","OP_SUCCESS141","OP_SUCCESS142","OP_NEGATE","OP_ABS","OP_NOT","OP_0NOTEQUAL","OP_ADD","OP_SUB","OP_SUCCESS149","OP_SUCCESS150","OP_SUCCESS151","OP_SUCCESS152","OP_SUCCESS153","OP_BOOLAND","OP_BOOLOR","OP_NUMEQUAL","OP_NUMEQUALVERIFY","OP_NUMNOTEQUAL","OP_LESSTHAN","OP_GREATERTHAN","OP_LESSTHANOREQUAL","OP_GREATERTHANOREQUAL","OP_MIN","OP_MAX","OP_WITHIN","OP_RIPEMD160","OP_SHA1","OP_SHA256","OP_HASH160","OP_HASH256","OP_CODESEPARATOR","OP_CHECKSIG","OP_CHECKSIGVERIFY","OP_CHECKMULTISIG","OP_CHECKMULTISIGVERIFY","OP_NOP1","OP_CHECKLOCKTIMEVERIFY","OP_CHECKSEQUENCEVERIFY","OP_NOP4","OP_NOP5","OP_NOP6","OP_NOP7","OP_NOP8","OP_NOP9","OP_NOP10","OP_CHECKSIGADD","OP_SUCCESS187","OP_SUCCESS188","OP_SUCCESS189","OP_SUCCESS190","OP_SUCCESS191","OP_SUCCESS192","OP_SUCCESS193","OP_SUCCESS194","OP_SUCCESS195","OP_SUCCESS196","OP_SUCCESS197","OP_SUCCESS198","OP_SUCCESS199","OP_SUCCESS200","OP_SUCCESS201","OP_SUCCESS202","OP_SUCCESS203","OP_SUCCESS204","OP_SUCCESS205","OP_SUCCESS206","OP_SUCCESS207","OP_SUCCESS208","OP_SUCCESS209","OP_SUCCESS210","OP_SUCCESS211","OP_SUCCESS212","OP_SUCCESS213","OP_SUCCESS214","OP_SUCCESS215","OP_SUCCESS216","OP_SUCCESS217","OP_SUCCESS218","OP_SUCCESS219","OP_SUCCESS220","OP_SUCCESS221","OP_SUCCESS222","OP_SUCCESS223","OP_SUCCESS224","OP_SUCCESS225","OP_SUCCESS226","OP_SUCCESS227","OP_SUCCESS228","OP_SUCCESS229","OP_SUCCESS230","OP_SUCCESS231","OP_SUCCESS232","OP_SUCCESS233","OP_SUCCESS234","OP_SUCCESS235","OP_SUCCESS236","OP_SUCCESS237","OP_SUCCESS238","OP_SUCCESS239","OP_SUCCESS240","OP_SUCCESS241","OP_SUCCESS242","OP_SUCCESS243","OP_SUCCESS244","OP_SUCCESS245","OP_SUCCESS246","OP_SUCCESS247","OP_SUCCESS248","OP_SUCCESS249","OP_SUCCESS250","OP_SUCCESS251","OP_SUCCESS252","OP_SUCCESS253","OP_SUCCESS254","getOpLabel","k","Object","entries","getWordType","isValidWord","isHex","test","isBytes","MAX_WORD_SIZE","encodeScript","script","varint","isArray","encodeWords","wordArray","words","encodeWord","startsWith","string","getOpCode","encodeSize","splitWord","OP_DATAPUSH1","OP_DATAPUSH2","decodeScript","stack","stackSize","wordType","wordSize","decodeWords","FmtScript","toAsm","toParam","Script","fmt","number$2","bytes$2","assert$3","assert$4","crypto$1","createView$2","rotr$2","toBytes$2","utf8ToBytes$3","Hash$2","wrapConstructor$2","randomBytes","bytesLength","SHA2$2","setBigUint64$2","Maj$2","SHA256_K$2","IV$2","SHA256_W$2","SHA256$2","SHA224$2","sha256$3","_0n$8","_1n$5","_2n$4","u8a$1","hexes","bytesToHex$1","numberToHexUnpadded","hexToNumber","hexToBytes$1","array","hexByte","isNaN","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","concatBytes","arrs","r","sum","forEach","utf8ToBytes$2","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","gen","sl","pred","validatorFns","function","boolean","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","ut","freeze","__proto__","bitGet","bitLen","bitSet","equalBytes","b1","b2","numberToVarBytesBE","_0n$7","_1n$4","_2n$3","_3n$2","_4n$2","_5n","_8n","result","pow","power","modulo","pow2","x","invert","u","m","FpSqrt","P","p1div4","root","eql","sqr","c1","n2","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","validateField","ORDER","MASK","BYTES","BITS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field$1","redef","sqrtP","f","is0","isOdd","lhs","rhs","add","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","lst","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","_0n$6","_1n$3","validateBasic","curve","Gx","Gy","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","shl","rhl","rl","_0n$5","_1n$2","_2n$2","_3n$1","_4n$1","weierstrassPoints","opts","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","point","isCompressed","toAffine","y","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","key","error","pointPrecomputes","Map","assertPrjPoint","other","Point","px","py","pz","fromAffine","normalizeZ","points","toInv","fromHex","assertValidity","fromPrivateKey","privateKey","BASE","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","delete","left","right","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","double","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","iz","z","ax","ay","zz","cofactor","toRawBytes","_bits","condition","item","W","windows","elm","precomputeWindow","base","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","precomputesMap","transform","ProjectivePoint","weierstrass","curveDef","hmac","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","groupOrder","minLen","hashToPrivateScalar","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","q","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","verify","signature","publicKey","sg","_sig","derError","is","HMAC$1","_key","iHash","oHash","buf","getPrototypeOf","hmac$2","getHash","msgs","arrays","every","concatBytes$1","secp256k1P","secp256k1N","_1n$1","_2n$1","divNearest","sqrtMod","_3n","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","a1","a2","POW_2_128","c2","_0n$4","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","modP$1","modN$1","Point$2","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrVerify","pub","schnorr","auxRand","t","k_","rx","isoMap","COEFF","xNum","xDen","yNum","yDen","isogenyMap","mapSWU","sqrtRatio","o","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","mapToCurveSimpleSWU","number$1","bytes$1","mapToCurve","createHasher","scalars","DST","encodeDST","expand","assert$1$1","createView$1","rotr$1","toBytes$1","utf8ToBytes$1","Hash$1","wrapConstructor$1","SHA2$1","setBigUint64$1","Maj$1","SHA256_K$1","IV$1","SHA256_W$1","SHA256$1","SHA224$1","sha256$2","hash256$1","_0n$3","random$1","N$1","P$1","_0n$2","_1n","_2n","_4n","CONST","N","ecc","fail","throws","utl","mod_bytes","_0n$1","NoblePoint","Field","is_valid","in_field","normalizeField","generate","hasOddY","negated","gt","lt","eq","ne","import","from_x","cp","normalizePoint","_p","assert","hashCons","msg","sha256$1","U32_MASK64","fromBig","le","u64$1","Ah","Al","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512$1","Rho","Id","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rr","sr","tl","tr","ripemd160","HMAC","hmac$1","hash160","getSecretKey","secret","seckey","xonly","getSharedKey","pubkey","sp","genSecretKey","getSharedCode","self_sec","peer_pub","hashtag","sec","peer","link","keys","sort","hmac512","is_even_pub","xonly_pub","noble","secp","util","hash160pkh","hash160sh","sha256sh","check","address","network","prefixes","P2PKH","scriptPubKey","fromPubKey","P2SH","fromScript","BECH32_PREFIXES","main","testnet","signet","regtest","VALID_PREFIXES","P2WPKH","P2WSH","xOnlyPub","P2TR","DEFAULT_TX","vin","vout","locktime","DEFAULT_VIN","scriptSig","sequence","witness","DEFAULT_VOUT","createTx","template","tx","txin","txout","encodeTx","txdata","omitWitness","useWitness","checkForWitness","encodeVersion","txid","encodeTxid","encodePrevOut","encodeSequence","encodeInputs","encodeOutput","encodeOutputs","encodeWitness","encodeLocktime","encodeValue","entry","encodeData","isEmpty","decodeTx","readVersion","hasWitness","marker","flag","checkWitnessFlag","inputs","vinCount","readInput","readInputs","outputs","outcount","readOutput","readOutputs","readWitness","readLocktime","readScript","readData","TxFmt","OUTPUT_TYPES","LEAF_VERSIONS","items","annex","at","pop","parseAnnex","cblock","parseBlock","err","parseWitScript","params","parseParams","readScriptPubKey","keytype","pattern","groups","exec","Tx","getTxSize","bsize","fsize","weight","remain","vsize","floor","getTxid","ADDRESS_TYPES","decodeFormat","format","getTool","decodeAddress","row","_type","_network","getData","tool","Address","p2pkh","p2sh","p2wpkh","p2wsh","p2tr","fromScriptPubKey","toScriptPubKey","VALID_HASH_TYPES","hashTx","config","sigflag","isAnypay","prevIdx","prevout","sighash","ENC.encodeVersion","hashPrevouts","hashSequence","ENC.encodeTxid","ENC.encodePrevOut","ENC.encodeValue","ENC.encodeSequence","hashOutputs","ENC.encodeLocktime","isAnyPay","SWSigner","witnessData","rawsig","extension","extflag","key_version","separator_pos","getAnnexData","spendType","preimage","prevouts","getPrevout","hashOutpoints","hashAmounts","hashScripts","hashOutput","FIELD_SIZE","getTapTag","getTapLeaf","getVersion","getTapBranch","leafA","leafB","merkleize","taptree","target","path","leaves","tree","leaf","branch","getTapTweak","isPrivate","getTweakedKey","intkey","tweakSecKey","tweakPubKey","tweak","SCRIPT_PUBKEY","getScriptOnlyPubkey","DEFAULT_VERSION","getTapKey","tapkey","ctrlpath","_t","parity","block","readParityBit","checkPath","paths","readCtrlBlock","extkey","cbyte","TRSigner","dp","kp","sG","eP","Signer","segwit","taproot","TapTree","getTag","SCR.getTapTag","getLeaf","SCR.getTapLeaf","getBranch","SCR.getTapBranch","getRoot","Tap","getPubKey","getSecKey","CHK.checkPath","getTweak","TWK.getTapTweak","TWK.tweakSecKey","TWK.tweakPubKey","CHK.readCtrlBlock","CHK.readParityBit","TWK.SCRIPT_PUBKEY","TxScript","_buff","asm","toJSON","MAX_VAL","NO_LOCK","TIME_MOD","TxSequence","isReplaceable","isLocked","isTimelock","timestamp","blockheight","estDate","Date","now","date","getTime","TxOutput$1","TxWitness","_data","_meta","TxInput$1","_tx","TxOutput","TxLocktime","objectUtil","assertEqual","assertIs","_arg","assertNever","_x","arrayToEnum","getValidEnumValues","validKeys","objectKeys","filter","filtered","objectValues","prototype","hasOwnProperty","call","checker","isInteger","isFinite","joinValues","separator","jsonStringifyReplacer","mergeShapes","first","second","ZodParsedType","getParsedType","nan","symbol","null","then","catch","promise","Set","unknown","ZodIssueCode","ZodError","errors","issues","addIssue","addIssues","subs","actualProto","setPrototypeOf","_mapper","mapper","issue","fieldErrors","_errors","processError","code","unionErrors","returnTypeError","argumentsError","curr","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","endsWith","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","addIssueToContext","ctx","overrideMap","common","contextualErrorMap","schemaErrorMap","ParseStatus","dirty","abort","mergeArray","status","results","arrayValue","INVALID","mergeObjectAsync","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","DIRTY","OK","isAborted","isDirty","isAsync","Promise","__classPrivateFieldGet","receiver","kind","has","__classPrivateFieldSet","errorUtil","_ZodEnum_cache","_ZodNativeEnum_cache","SuppressedError","errToObj","ParseInputLazyPath","parent","_cachedPath","_path","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","description","iss","_a","_b","ZodType","_def","_getType","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","safeParse","async","parseAsync","safeParseAsync","maybeAsyncResult","refine","getIssueProperties","_refinement","setError","refinement","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","superRefine","def","spa","bind","optional","nullable","nullish","or","and","brand","default","describe","pipe","readonly","isNullable","vendor","validate","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","RegExp","timeRegexSource","secondsRegexSource","precision","datetimeRegex","regex","local","isValidJWT","jwt","alg","header","padEnd","atob","typ","isValidCidr","ip","ZodString","coerce","checks","tooBig","tooSmall","URL","lastIndex","trim","toUpperCase","_regex","_addCheck","email","url","emoji","uuid","nanoid","cuid","cuid2","ulid","base64url","cidr","datetime","time","duration","minLength","max","maxLength","nonempty","isDatetime","ch","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isCIDR","isBase64","isBase64url","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","toFixed","ZodNumber","arguments","gte","lte","setLimit","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","_getInvalidInput","ZodBoolean","Boolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","all","element","deepPartialify","ZodObject","newShape","shape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","_c","_d","strip","augmentation","merge","merging","setKey","pick","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","types","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","enum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","rest","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","finalMap","ZodSet","minSize","maxSize","finalizeSet","elements","parsedSet","ZodFunction","implement","makeArgsIssue","makeReturnsIssue","returns","fn","me","parsedArgs","Reflect","apply","parsedReturns","parameters","returnType","func","strictImplement","getter","expectedValues","enumValues","Values","Enum","extract","newDef","exclude","opt","WeakMap","nativeEnumValues","promisified","sourceType","checkCtx","arg","fatal","processed","executeRefinement","inner","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","BRAND","Symbol","inResult","in","handleAsync","cleanParams","_params","_fatal","late","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","NEVER","defaultErrorMap","setErrorMap","EMPTY_PATH","ZodTransformer","Schema","ZodSchema","any","discriminatedUnion","instanceof","cls","intersection","lazy","literal","nativeEnum","oboolean","onumber","ostring","pipeline","record","strictObject","transformer","tuple","union","quotelessJson","uint32","uint64","byteArr","asmcode","TxInput","TxData","_e","remainder"],"mappings":"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","x_google_ignoreList":[0,8,44]}